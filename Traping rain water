nt trap(int* height, int heightSize) {
    if (heightSize == 0) {
        return 0;
    }
    int left_max[heightSize];
    int right_max[heightSize];
    left_max[0] = height[0];
    for (int i = 1; i < heightSize; i++) {
        left_max[i] = height[i] > left_max[i - 1] ? height[i] : left_max[i - 1];
    }
    right_max[heightSize - 1] = height[heightSize - 1];
    for (int i = heightSize - 2; i >= 0; i--) {
        right_max[i] = height[i] > right_max[i + 1] ? height[i] : right_max[i + 1];
    }
    int water_trapped = 0;
    for (int i = 0; i < heightSize; i++) {
        water_trapped += (left_max[i] < right_max[i] ? left_max[i] : right_max[i]) - height[i];
    }
    return water_trapped;
}
